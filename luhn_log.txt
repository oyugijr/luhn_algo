import random

LOG_FILE = "luhn_log.txt"

def log_result(message):
    """Logs the result to a file."""
    with open(LOG_FILE, "a") as file:
        file.write(message + "\n")

def luhn_check(card_number):
    """Validate a number using the Luhn Algorithm."""
    digits = [int(d) for d in str(card_number)][::-1]
    checksum = sum(d if i % 2 == 0 else (d * 2 - 9 if d * 2 > 9 else d * 2)
                   for i, d in enumerate(digits))
    is_valid = checksum % 10 == 0
    return is_valid

def luhn_generate(base_number):
    """Generate a valid Luhn number by computing the correct check digit."""
    digits = [int(d) for d in str(base_number)]
    digits.append(0)  # Placeholder for checksum
    checksum = sum(d if i % 2 == len(digits) % 2 else (d * 2 - 9 if d * 2 > 9 else d * 2)
                   for i, d in enumerate(digits[:-1]))
    check_digit = (10 - (checksum % 10)) % 10
    return int(str(base_number) + str(check_digit))

def generate_random_luhn(length=16):
    """Generate a random valid Luhn-compliant number of given length."""
    if length < 2:
        raise ValueError("Length must be at least 2")
    base_number = random.randint(10**(length-2), 10**(length-1) - 1)
    return luhn_generate(base_number)

def validate_batch():
    """Allows batch validation of multiple numbers."""
    numbers = input("Enter numbers separated by spaces: ").strip().split()
    results = []
    for number in numbers:
        if number.isdigit():
            is_valid = luhn_check(number)
            result_msg = f"{number} -> {'✅ VALID' if is_valid else '❌ NOT VALID'}"
            print(result_msg)
            results.append(result_msg)
        else:
            print(f"⚠️ Skipping invalid input: {number}")
    if results:
        log_result("\n".join(results))

def main():
    while True:
        print("\n" + "="*40)
        print("          Luhn Algorithm CLI          ")
        print("="*40)
        print("1. Validate a Luhn number")
        print("2. Generate a Luhn-compliant number from a base number")
        print("3. Generate a random Luhn number")
        print("4. Batch Validate multiple numbers")
        print("5. Exit")
        print("="*40)

        choice = input("Select an option (1-5): ").strip()

        if choice == "1":
            number = input("Enter the number to validate: ").strip()
            if number.isdigit():
                is_valid = luhn_check(number)
                result = f"✅ {number} is a VALID Luhn number" if is_valid else f"❌ {number} is NOT a valid Luhn number"
                print(result)
                log_result(result)
            else:
                print("\n⚠️ Invalid input. Please enter digits only.\n")

        elif choice == "2":
            base_number = input("Enter the base number: ").strip()
            if base_number.isdigit():
                luhn_number = luhn_generate(base_number)
                result = f"✅ Generated Luhn number: {luhn_number}"
                print(result)
                log_result(result)
            else:
                print("\n⚠️ Invalid input. Please enter digits only.\n")

        elif choice == "3":
            length = input("Enter the length of the Luhn number (min 2): ").strip()
            if length.isdigit() and int(length) >= 2:
                random_luhn = generate_random_luhn(int(length))
                result = f"✅ Generated random Luhn number: {random_luhn}"
                print(result)
                log_result(result)
            else:
                print("\n⚠️ Invalid input. Length must be at least 2.\n")

        elif choice == "4":
            validate_batch()

        elif choice == "5":
            print("\n🚀 Exiting... Logs saved in 'luhn_log.txt'. Goodbye!\n")
            break

        else:
            print("\n⚠️ Invalid option. Please select 1, 2, 3, 4, or 5.\n")

if __name__ == "__main__":
    main()
